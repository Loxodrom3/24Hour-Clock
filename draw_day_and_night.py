import time
import board
import simpleio
import neopixel
import digitalio
import math

sunRise = 441,  441,  441,  441,  441,  441,  440,  440,  440,  440,  440,  439,  439,  439,  438,  438,  437,  437,  436,  436,  435,  434,  434,  433,  432,  432,  431,  430,  429,  428,  427,  426,  425,  424,  423,  422,  421,  420,  419,  418,  417,  416,  414,  413,  412,  411,  409,  408,  407,  405,  404,  403,  401,  400,  398,  397,  396,  394,  393,  391,  390,  388,  387,  385,  384,  382,  380,  379,  437,  436,  434,  433,  431,  429,  428,  426,  425,  423,  421,  420,  418,  417,  415,  413,  412,  410,  409,  407,  405,  404,  402,  401,  399,  397,  396,  394,  393,  391,  390,  388,  387,  385,  384,  382,  381,  379,  378,  376,  375,  373,  372,  371,  369,  368,  366,  365,  364,  363,  361,  360,  359,  358,  356,  355,  354,  353,  352,  351,  350,  349,  348,  347,  346,  345,  344,  343,  342,  341,  341,  340,  339,  338,  338,  337,  336,  336,  335,  335,  334,  334,  333,  333,  333,  332,  332,  332,  332,  331,  331,  331,  331,  331,  331,  331,  331,  331,  331,  331,  331,  331,  332,  332,  332,  332,  333,  333,  333,  334,  334,  335,  335,  336,  336,  337,  337,  338,  338,  339,  340,  340,  341,  342,  342,  343,  344,  345,  345,  346,  347,  348,  349,  349,  350,  351,  352,  353,  354,  355,  356,  356,  357,  358,  359,  360,  361,  362,  363,  364,  365,  366,  367,  368,  369,  369,  370,  371,  372,  373,  374,  375,  376,  377,  378,  379,  380,  381,  382,  383,  384,  385,  385,  386,  387,  388,  389,  390,  391,  392,  393,  394,  395,  396,  397,  398,  398,  399,  400,  401,  402,  403,  404,  405,  406,  407,  408,  409,  410,  411,  412,  413,  413,  414,  415,  417,  418,  419,  420,  421,  422,  423,  424,  425,  426,  427,  428,  429,  430,  431,  433,  434,  435,  436,  437,  438,  439,  440,  441,  442,  443,  444,  446,  447,  448,  449,  450,  391,  392,  393,  395,  396,  397,  398,  399,  400,  401,  403,  404,  405,  406,  407,  408,  409,  410,  412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 428, 429, 430, 431, 432, 432, 433, 434, 434, 435, 436, 436, 437, 437, 438,  438,  439,  439,  439,  440,  440,  440,  440,  440,  440
sunSet = 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1216, 1217, 1218, 1219, 1220, 1220, 1221, 1222, 1222, 1223, 1224, 1224, 1225, 1226, 1226, 1227, 1227, 1228, 1228, 1229, 1229, 1229, 1230, 1230, 1230, 1231, 1231, 1231, 1231, 1231, 1231, 1232, 1232, 1232, 1232, 1232, 1231, 1231, 1231, 1231, 1231, 1231, 1230, 1230, 1230, 1229, 1229, 1228, 1228, 1227, 1227, 1226, 1226, 1225, 1225, 1224, 1223, 1222, 1222, 1221, 1220, 1219, 1218, 1217, 1216, 1215, 1214, 1213, 1212, 1211, 1210, 1209, 1208, 1207, 1205, 1204, 1203, 1202, 1201, 1199, 1198, 1197, 1195, 1194, 1193, 1191, 1190, 1188, 1187, 1185, 1184, 1182, 1181, 1179, 1178, 1176, 1175, 1173, 1172, 1170, 1169, 1167, 1165, 1164, 1162, 1161, 1159, 1157, 1156, 1154, 1152, 1151, 1149, 1148, 1146, 1144, 1143, 1141, 1139, 1138, 1136, 1134, 1133, 1131, 1129, 1128, 1126, 1125, 1123, 1120, 1118, 1117, 1115, 1113, 1112, 1110, 1109, 1107, 1106, 1104, 1103, 1101, 1100, 1098, 1097, 1095, 1094, 1092, 1091, 1090, 1088, 1087, 1086, 1084, 1083, 1082, 1081, 1079, 1078, 1077, 1076, 1015, 1014, 1013, 1012, 1011, 1010, 1009, 1008, 1007, 1006, 1005, 1004, 1003, 1003, 1002, 1001, 1001, 1000, 999, 999, 998, 998, 997, 997, 997, 996, 996, 996, 995, 995, 995, 995, 995, 995, 995, 995, 995, 995, 995, 995, 996, 996, 996, 996, 997, 997, 998, 998, 999, 999, 1000, 1000, 1001, 1002, 1002, 1003, 1004, 1004, 1005, 1005
toDay = 8
testDay = 150  # testing drawing the Days sunrise and sunset without using the RTC. range 1-366 (leapyear case) testDay will eventually be replaced by RTC.day()

# SetUp HeartBeat
ledHB = digitalio.DigitalInOut(board.D13)
ledHB.direction = digitalio.Direction.OUTPUT
ledHB.value = True

# SetUp NeoPixels
LEDPin = board.A1
numLED = 36
ORDER = neopixel.GRB
ringLED = neopixel.NeoPixel(LEDPin, numLED, brightness=0.6, auto_write=False, pixel_order=ORDER)

base = 1440
ring1 = 24
ring2 = 12

dayR = 30
dayG = 45
dayB = 0

nitR = 0
nitG = 5
nitB = 60

while True:

    # draw ring(s) with day, night, and now
    # later add markers with blending for sunrise and sunset for that day
    # draw rings
    # 0 to sunrise is night color
    if toDay != testDay:
        toDay = testDay
        setPixel = int((ring1*sunSet[toDay]/base) - (ring1 / 2))
        risePixel = int((ring1*sunRise[toDay]/base) + (ring1 / 2)) -1 # need to use ciling
        # risePct =
        # setPct =
    print(toDay, sunSet[toDay], sunRise[toDay], setPixel, risePixel, sep=",  ")
    for i in range(0 ,setPixel, 1):
        ringLED[i] = (dayR, dayG, dayB)
    for i in range(setPixel, risePixel, 1):
        ringLED[i] = (nitR, nitG, nitB)
    for i in range(risePixel, ring1, 1):
        ringLED[i] = (dayR, dayG, dayB)

    # sunrise to sunset is day
    # sunset to midnight is night
    ringLED.show()
    ledHB.value = not ledHB.value
    time.sleep(0.01)